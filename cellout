#!/bin/bash

# vim: set expandtab autoindent smartindent:

# git://github.com/cdown/cellout.git

# cellout
# A simple textual battery monitor.

# Copyright (c) 2011 Chris Down <christopher.down@iofc.org>
# This is free software under a 2-clause BSD license; see the COPYING file for
# copying conditions. There is NO warranty; not even for MERCHANTABILITY or
# FITNESS FOR A PARTICULAR PURPOSE.

_program_name="${0##*/}"
_program_version='1.0'

_die() {
    printf '%s\n' "${@:2}" >&2
    exit "$1"
}

if ! (( $# != 1 )) || [[ $1 =~ ^-(-)?h(elp)?$ ]]; then
    _die 1 "${_program_name} ${_program_version}" "Usage: ${_program_name} [battery]"
fi

_batt="$1"

for _file in "/sys/class/power_supply/${_batt}/"{charge_{full,now},present,status}; do
    [[ ! -r ${_file} ]] && _die 2 "Could not read ${_file}"
done

_batt_charge_full=$(<"/sys/class/power_supply/${_batt}/charge_full")
_batt_charge_now=$(<"/sys/class/power_supply/${_batt}/charge_now")
_batt_status=$(<"/sys/class/power_supply/${_batt}/status")
_batt_present=$(<"/sys/class/power_supply/${_batt}/present")

_batt_status="${_batt_status:0:1}"
	
_batt_perc=$(( _batt_charge_now * 100 / _batt_charge_full ))

if   (( _batt_perc <  25  )); then _batt_perc_graphic='#---';
elif (( _batt_perc <  50  )); then _batt_perc_graphic='##--';
elif (( _batt_perc <  75  )); then _batt_perc_graphic='###-';
elif (( _batt_perc <= 100 )); then _batt_perc_graphic='####'; fi

(( _batt_present )) || _batt_perc_graphic='MMMM'

printf '[%s] %s%s\n' "${_batt_perc_graphic}" "${_batt_perc}" "${_batt_status}"
